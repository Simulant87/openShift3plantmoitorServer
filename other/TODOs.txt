-------------------
Security
create Unique Random String ID for User/Message to expose in Confirm links so the IDs are not sequential and therefore not guessable.
import java.util.UUID;
String uuid = UUID.randomUUID().toString();
System.out.println("uuid = " + uuid);
-------------------
Security
Look up how session IDs an authentification with only one time password used works.
-------------------
Usability
Send HTML Emails with clickable Links.
Create a Template for nicer Email format and interchangable content. Header, Footer, cutsom Text.
-------------------
Usability
Add missing Field to create Message (e.g. Subject of the Mail), optional custom time intervall for confirmation/notification.
-------------------
Security
store messages encrypted.
solve key storage problem.
-------------------
Usability
add missing CRUD operations.
Delete User,
Delete Message,
Update Message,
Update User: Change Password,
Update User: Change Email, confirm new Email with Token from Mail.
-------------------
Usability/Security
Move User/Password or Session ID in REST-Header oder basic Auth formular?
-------------------
Usability
create Index on Message uuid
-------------------

Usability Organisation
Use MySql
Setup Hibernate on Deploy-(drop-create, validate to always work)
Deploy to OpenShift with MySql
Unit-Tests
Mocking-Tests
Integration-Tests
Jenkins Build Server
-------------------

Store Encrypted Messages:
http://security.stackexchange.com/questions/17368/how-do-i-securely-store-and-retrieve-a-many-time-use-key
Nachrichten werden mit einem Symetischen Schl�ssel verschl�sselt
Der Schl�ssel wird mit einer asymetrischen Verschl�sselung gespeichert.
Der Asymetische Schl�ssel wird on Boot in den Applikation eigegeben, sodass er nicht auf der Platte gespeichert wird, sondern nur im RAM gehalten wird.
